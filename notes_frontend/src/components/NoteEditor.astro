---
/** 
 * NoteEditor component: shows and edits a selected note.
 * Props:
 *   - note: {id, title, content, updatedAt}
 *   - onSave: function(note) called to save note
 *   - onDelete: function(id) called to delete note
 *   - onEdit: function(note) called when editing (for local state emission)
 *   - isEditing: whether currently editing
 */
const { note, onSave, onDelete, isEditing = false, onEdit } = Astro.props;
let editableNote = note ? { ...note } : null;

const handleInput = evt => {
  const { name, value } = evt.target;
  editableNote[name] = value;
  if (onEdit) onEdit({ ...editableNote });
};
const handleSave = () => onSave && onSave(editableNote);
const handleDelete = () => onDelete && onDelete(editableNote.id);
---

<section class="editor-section">
  {!note ? (
    <div class="editor-empty">
      <span>No note selected</span>
    </div>
  ) : (
    <form class="editor-form" onSubmit={(e) => {e.preventDefault(); handleSave();}}>
      <input
        type="text"
        name="title"
        class="editor-title"
        placeholder="Title"
        value={isEditing ? editableNote.title : note.title}
        onInput={isEditing ? handleInput : undefined}
        readOnly={!isEditing}
        autoFocus={isEditing}
        maxLength={120}
        required
      />
      <textarea
        name="content"
        class="editor-content"
        placeholder="Type your note here..."
        rows="14"
        value={isEditing ? editableNote.content : note.content}
        onInput={isEditing ? handleInput : undefined}
        readOnly={!isEditing}
        required
      />
      <div class="editor-actions">
        {isEditing ? (
          <button class="btn save-btn" type="submit" title="Save">
            üíæ Save
          </button>
        ) : (
          <button class="btn edit-btn" type="button" title="Edit"
           onClick={() => onEdit({ ...note })}>
            ‚úèÔ∏è Edit
          </button>
        )}
        <button
          class="btn delete-btn"
          type="button"
          title="Delete"
          onClick={handleDelete}
          style="margin-left:auto"
        >
          üóëÔ∏è Delete
        </button>
      </div>
      <span class="editor-updated">
        Last updated: {note.updatedAt ? new Date(note.updatedAt).toLocaleString() : "never"}
      </span>
    </form>
  )}
</section>

<style>
  .editor-section {
    flex: 1;
    width: 100%;
    background: #fff;
    display: flex;
    align-items: stretch; justify-content: stretch;
    min-width: 0; min-height: 0;
    padding: 0;
  }
  .editor-empty {
    width: 100%; margin: auto; color: #aaa;
    text-align: center; padding: 2.2rem 0;
    font-size: 1.14rem;
  }
  .editor-form {
    display: flex; flex-direction: column; min-height: 0; width: 100%;
    gap: 0.8rem; padding: 2.3rem 2.4rem 2rem 2.4rem;
    background: #FFF;
    border-radius: 10px;
    margin: auto;
    box-shadow: 0 0 0 0 rgba(0,0,0,0);
    max-width: 680px;
  }
  .editor-title {
    font-size: 1.3rem; padding: 0.7rem; font-weight: 600;
    border: 1px solid #CED4DA; border-radius: 7px;
    color: #007BFF; background: #f8f9fa;
    margin-bottom: 0.6rem;
    outline: none; transition: border-color 0.2s;
  }
  .editor-title:focus, .editor-title:active {
    border-color: #007BFF; background: #E9F3FF;
  }
  .editor-content {
    font-size: 1.09rem;
    padding: 0.75rem 0.8rem;
    border: 1px solid #ddd; border-radius: 6px;
    color: #232323; background: #fcfcfc;
    min-height: 220px; resize: vertical; line-height: 1.5;
    outline: none; transition: border-color 0.17s;
  }
  .editor-content:focus {
    border-color: #007BFF;
    background: #EFEFFF;
  }
  .editor-actions {
    display: flex; align-items: center; gap:1rem;
    margin-top: 0.5rem;
  }
  .btn {
    border: none; padding: 0.54rem 1.1rem; font-size:1.06rem;
    border-radius: 7px; font-weight: 600;
    cursor: pointer; transition: background 0.1s,color 0.1s;
  }
  .save-btn {
    background: #007BFF; color: #fff;
  }
  .edit-btn {
    background: #6C757D; color: #fff;
  }
  .delete-btn {
    background: #FFC107; color: #432700;
  }
  .save-btn:hover, .edit-btn:hover { filter: brightness(1.04); }
  .delete-btn:hover { background: #ff5e19; color: #fff; }
  .editor-updated {
    align-self: flex-end;
    font-size: 0.93rem;
    color: #7c7c7c;
    margin-top: 0.7rem;
  }

  @media (max-width: 900px) {
    .editor-form { padding: 1.2rem 1rem 1.4rem 1rem; }
  }
  @media (max-width: 600px) {
    .editor-form, .editor-section { border-radius: 0; }
    .editor-form { padding: 0.7rem 0.25rem 0.9rem 0.25rem; min-width: 0;}
  }
</style>
